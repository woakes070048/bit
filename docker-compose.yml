version: "3"
services:
    redis:
        image: redis
        ports:
            - "6379:6379"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
        deploy:
            placement:
                constraints: [node.role == manager]
        networks:
            - webnet
    web:
        image: chiter/codesmart-bit:aws
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
        ports:
            - "80:5000"
        user: root
        environment:
            - REDIS_ADDR=redis
            - REDIS_PORT=6379
        command: /bin/sh -c 'python bit.py runserver -d'
        links:
            - redis
        networks:
            - webnet
    celery:
        image: chiter/codesmart-bit:aws
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
        environment:
            - C_FORCE_ROOT=true
            - REDIS_ADDR=redis
            - REDIS_PORT=6379
        command: /bin/sh -c 'python bit.py worker --workers=1'
        deploy:
            placement:
                constraints: [node.role == manager]
        links:
            - redis
        networks:
            - webnet
#    celerybeat:
#        image: chiter/codesmart-bit:aws
#        deploy:
#            replicas: 1
#            restart_policy:
#                condition: on-failure
#        environment:
#            - REDIS_ADDR=redis
#            - REDIS_PORT=6379
#        # user: root
#        command: /bin/sh -c 'python bit.py beat'
#        links:
#            - redis
#        deploy:
#            placement:
#                constraints: [node.role == manager]
#        # depends_on:
#        #     - web
#        networks:
#            - webnet
networks:
    webnet: